 <header className="App-header ">
          <img src={logo} className="App-logo" alt="logo" />
          <h1 className="App-title">CYBERHACKER WARFARE 4000</h1>
          {appState.loading ? (
            <p>loading</p>
          ) : (
            <>
              {/* icon instead of text? */}
              <div>Battery: {appState.user.playerStats.battery}%</div>
              <div>
                Firewall{" "}
                {(
                  (appState.user.playerStats.currentFirewall /
                    appState.user.playerStats.maxFirewall) *
                  100
                ).toFixed(0)}
                %
              </div>
              <div>BTCs: {Math.floor(appState.user.playerStats.bitCoins)}</div>
              <div>
                Exp: {appState.user.playerStats.exp} /{" "}
                {appState.user.playerStats.expToLevel}
              </div>
              <div>{appState.user.playerStats.rankName}</div>
            </>
          )}
          <NavLinkRR to="/" exact>
            Home
          </NavLinkRR>
          <NavLinkRR to="/my-profile">My profile</NavLinkRR>
          <NavLinkRR to="/create-hacker">Create</NavLinkRR>
          <NavLinkRR to="/petty-hacker">Petty </NavLinkRR>
          <NavLinkRR to="/hack-crimes">Hack Crimes</NavLinkRR>
          <NavLinkRR to="/hack-player">Hack Player</NavLinkRR>
          <NavLinkRR to="/wanted-list">Wanted List</NavLinkRR>
          <NavLinkRR to="/alliance">Alliance</NavLinkRR>
          <NavLinkRR to="/marketplace">Marketplace</NavLinkRR>
          <NavLinkRR to="/vpn">VPN</NavLinkRR>
          <NavLinkRR to="/datacenters">Datacenters</NavLinkRR>
          <NavLinkRR
            to={{ pathname: "/cryptocurrency", state: { foo: "bar" } }}
          >
            CryptoCurrency
          </NavLinkRR>
          <NavLinkRR to="/system-repair">System Repair</NavLinkRR>
          <NavLinkRR to="/ladder">Ladder</NavLinkRR>
          <NavLinkRR to="/information">Information</NavLinkRR>
          <NavLinkRR to="/arcade">Arcade</NavLinkRR>
          {!api.isLoggedIn() && <NavLinkRR to="/signup">Signup</NavLinkRR>}
          {!api.isLoggedIn() && <NavLinkRR to="/login">Login</NavLinkRR>}
          {api.isLoggedIn() && (
            <Link to="/" onClick={e => handleLogoutClick(e)}>
              logout
            </Link>
          )}
          <NavLinkRR to="/secret">Admin menu</NavLinkRR>
        </header>